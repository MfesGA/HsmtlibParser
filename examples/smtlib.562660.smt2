(set-logic AUFLIRA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-sort S28 0)
(declare-sort S29 0)
(declare-sort S30 0)
(declare-sort S31 0)
(declare-sort S32 0)
(declare-sort S33 0)
(declare-sort S34 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 S3) Real)
(declare-fun f4 (S4 S2) S2)
(declare-fun f5 () S4)
(declare-fun f6 (S5 Int) S3)
(declare-fun f7 () S5)
(declare-fun f8 (S6 S3) Int)
(declare-fun f9 () S6)
(declare-fun f10 (S7 S6) S6)
(declare-fun f11 () S7)
(declare-fun f12 (S8 S3) S9)
(declare-fun f13 (S10 S8) S8)
(declare-fun f14 () S10)
(declare-fun f15 () S4)
(declare-fun f16 (S11 Real) Real)
(declare-fun f17 () S11)
(declare-fun f18 () S7)
(declare-fun f19 (S12 Int) Int)
(declare-fun f20 () S12)
(declare-fun f21 (S13 S2) S4)
(declare-fun f22 () S13)
(declare-fun f23 (S14 S6) S7)
(declare-fun f24 () S14)
(declare-fun f25 (S15 S8) S10)
(declare-fun f26 () S15)
(declare-fun f27 (S16 S9) S9)
(declare-fun f28 (S17 S9) S16)
(declare-fun f29 () S17)
(declare-fun f30 (S18 S3) S2)
(declare-fun f31 (S19 S2) S18)
(declare-fun f32 () S19)
(declare-fun f33 (S20 S3) S6)
(declare-fun f34 (S21 S6) S20)
(declare-fun f35 () S21)
(declare-fun f36 (S22 S3) S8)
(declare-fun f37 (S23 S8) S22)
(declare-fun f38 () S23)
(declare-fun f39 (S24 S3) S4)
(declare-fun f40 () S24)
(declare-fun f41 (S25 S26) S9)
(declare-fun f42 (S27 S8) S25)
(declare-fun f43 () S27)
(declare-fun f44 () S8)
(declare-fun f45 (S28 S3) S26)
(declare-fun f46 (S3) S28)
(declare-fun f47 (S29 S26) Int)
(declare-fun f48 (S30 S6) S29)
(declare-fun f49 () S30)
(declare-fun f50 (S31 S26) Real)
(declare-fun f51 (S32 S2) S31)
(declare-fun f52 () S32)
(declare-fun f53 (S26 S3) S1)
(declare-fun f54 (S3 S26) S1)
(declare-fun f55 (S33 Int) S12)
(declare-fun f56 () S33)
(declare-fun f57 (S34 Real) S11)
(declare-fun f58 () S34)
(declare-fun f59 () S33)
(declare-fun f60 () S34)
(declare-fun f61 (S26) S28)
(declare-fun f62 () S9)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f3 (f4 f5 ?v0) ?v1) (f3 ?v0 (f6 f7 (+ (f8 f9 ?v1) 1))))))
(assert (forall ((?v0 S6) (?v1 S3)) (= (f8 (f10 f11 ?v0) ?v1) (f8 ?v0 (f6 f7 (+ (f8 f9 ?v1) 1))))))
(assert (forall ((?v0 S8) (?v1 S3)) (= (f12 (f13 f14 ?v0) ?v1) (f12 ?v0 (f6 f7 (+ (f8 f9 ?v1) 1))))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f3 (f4 f15 ?v0) ?v1) (f16 f17 (f3 ?v0 ?v1)))))
(assert (forall ((?v0 S6) (?v1 S3)) (= (f8 (f10 f18 ?v0) ?v1) (f19 f20 (f8 ?v0 ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (= (f3 (f4 (f21 f22 ?v0) ?v1) ?v2) (+ (f3 ?v0 ?v2) (f3 ?v1 ?v2)))))
(assert (forall ((?v0 S6) (?v1 S6) (?v2 S3)) (= (f8 (f10 (f23 f24 ?v0) ?v1) ?v2) (+ (f8 ?v0 ?v2) (f8 ?v1 ?v2)))))
(assert (forall ((?v0 S8) (?v1 S8) (?v2 S3)) (= (f12 (f13 (f25 f26 ?v0) ?v1) ?v2) (f27 (f28 f29 (f12 ?v0 ?v2)) (f12 ?v1 ?v2)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (= (f3 (f30 (f31 f32 ?v0) ?v1) ?v2) (f3 ?v0 (f6 f7 (+ (f8 f9 ?v2) (f8 f9 ?v1)))))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S3)) (= (f8 (f33 (f34 f35 ?v0) ?v1) ?v2) (f8 ?v0 (f6 f7 (+ (f8 f9 ?v2) (f8 f9 ?v1)))))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S3)) (= (f12 (f36 (f37 f38 ?v0) ?v1) ?v2) (f12 ?v0 (f6 f7 (+ (f8 f9 ?v2) (f8 f9 ?v1)))))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (= (f3 (f4 (f39 f40 ?v0) ?v1) ?v2) (f3 ?v1 (f6 f7 (+ (f8 f9 ?v2) (f8 f9 ?v0)))))))
(assert (let ((?v_0 (f6 f7 0))) (not (= (f41 (f42 f43 f44) (f45 (f46 ?v_0) (f6 f7 4))) (f27 (f28 f29 (f27 (f28 f29 (f27 (f28 f29 (f12 f44 ?v_0)) (f12 f44 (f6 f7 1)))) (f12 f44 (f6 f7 2)))) (f12 f44 (f6 f7 3)))))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S3)) (let ((?v_0 (f46 (f6 f7 0))) (?v_1 (f42 f43 ?v0))) (= (f41 ?v_1 (f45 ?v_0 (f6 f7 (+ (f8 f9 ?v1) (f8 f9 ?v2))))) (f27 (f28 f29 (f41 (f42 f43 (f36 (f37 f38 ?v0) ?v2)) (f45 ?v_0 ?v1))) (f41 ?v_1 (f45 ?v_0 ?v2)))))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S3)) (let ((?v_0 (f46 (f6 f7 0))) (?v_1 (f48 f49 ?v0))) (= (f47 ?v_1 (f45 ?v_0 (f6 f7 (+ (f8 f9 ?v1) (f8 f9 ?v2))))) (+ (f47 (f48 f49 (f33 (f34 f35 ?v0) ?v2)) (f45 ?v_0 ?v1)) (f47 ?v_1 (f45 ?v_0 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (let ((?v_0 (f46 (f6 f7 0))) (?v_1 (f51 f52 ?v0))) (= (f50 ?v_1 (f45 ?v_0 (f6 f7 (+ (f8 f9 ?v1) (f8 f9 ?v2))))) (+ (f50 (f51 f52 (f30 (f31 f32 ?v0) ?v2)) (f45 ?v_0 ?v1)) (f50 ?v_1 (f45 ?v_0 ?v2)))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S8)) (let ((?v_1 (f8 f9 ?v0)) (?v_0 (f42 f43 ?v2))) (=> (< ?v_1 (f8 f9 ?v1)) (= (f41 ?v_0 (f45 (f46 ?v0) ?v1)) (f27 (f28 f29 (f12 ?v2 ?v0)) (f41 ?v_0 (f45 (f46 (f6 f7 (+ ?v_1 1))) ?v1))))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S6)) (let ((?v_1 (f8 f9 ?v0)) (?v_0 (f48 f49 ?v2))) (=> (< ?v_1 (f8 f9 ?v1)) (= (f47 ?v_0 (f45 (f46 ?v0) ?v1)) (+ (f8 ?v2 ?v0) (f47 ?v_0 (f45 (f46 (f6 f7 (+ ?v_1 1))) ?v1))))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S2)) (let ((?v_1 (f8 f9 ?v0)) (?v_0 (f51 f52 ?v2))) (=> (< ?v_1 (f8 f9 ?v1)) (= (f50 ?v_0 (f45 (f46 ?v0) ?v1)) (+ (f3 ?v2 ?v0) (f50 ?v_0 (f45 (f46 (f6 f7 (+ ?v_1 1))) ?v1))))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3) (?v3 S8)) (let ((?v_0 (f8 f9 ?v1)) (?v_1 (f42 f43 ?v3)) (?v_2 (f46 ?v0))) (=> (<= (f8 f9 ?v0) ?v_0) (=> (<= ?v_0 (f8 f9 ?v2)) (= (f27 (f28 f29 (f41 ?v_1 (f45 ?v_2 ?v1))) (f41 ?v_1 (f45 (f46 ?v1) ?v2))) (f41 ?v_1 (f45 ?v_2 ?v2))))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3) (?v3 S6)) (let ((?v_0 (f8 f9 ?v1)) (?v_1 (f48 f49 ?v3)) (?v_2 (f46 ?v0))) (=> (<= (f8 f9 ?v0) ?v_0) (=> (<= ?v_0 (f8 f9 ?v2)) (= (+ (f47 ?v_1 (f45 ?v_2 ?v1)) (f47 ?v_1 (f45 (f46 ?v1) ?v2))) (f47 ?v_1 (f45 ?v_2 ?v2))))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3) (?v3 S2)) (let ((?v_0 (f8 f9 ?v1)) (?v_1 (f51 f52 ?v3)) (?v_2 (f46 ?v0))) (=> (<= (f8 f9 ?v0) ?v_0) (=> (<= ?v_0 (f8 f9 ?v2)) (= (+ (f50 ?v_1 (f45 ?v_2 ?v1)) (f50 ?v_1 (f45 (f46 ?v1) ?v2))) (f50 ?v_1 (f45 ?v_2 ?v2))))))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S3)) (= (f47 (f48 f49 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) 1))) (f6 f7 (+ (f8 f9 ?v2) 1)))) (f47 (f48 f49 (f10 f11 ?v0)) (f45 (f46 ?v1) ?v2)))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S3)) (= (f41 (f42 f43 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) 1))) (f6 f7 (+ (f8 f9 ?v2) 1)))) (f41 (f42 f43 (f13 f14 ?v0)) (f45 (f46 ?v1) ?v2)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (= (f50 (f51 f52 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) 1))) (f6 f7 (+ (f8 f9 ?v2) 1)))) (f50 (f51 f52 (f4 f5 ?v0)) (f45 (f46 ?v1) ?v2)))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S3) (?v3 S3)) (let ((?v_0 (f8 f9 ?v2))) (= (f47 (f48 f49 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) ?v_0))) (f6 f7 (+ (f8 f9 ?v3) ?v_0)))) (f47 (f48 f49 (f33 (f34 f35 ?v0) ?v2)) (f45 (f46 ?v1) ?v3))))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S3) (?v3 S3)) (let ((?v_0 (f8 f9 ?v2))) (= (f41 (f42 f43 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) ?v_0))) (f6 f7 (+ (f8 f9 ?v3) ?v_0)))) (f41 (f42 f43 (f36 (f37 f38 ?v0) ?v2)) (f45 (f46 ?v1) ?v3))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3) (?v3 S3)) (let ((?v_0 (f8 f9 ?v2))) (= (f50 (f51 f52 ?v0) (f45 (f46 (f6 f7 (+ (f8 f9 ?v1) ?v_0))) (f6 f7 (+ (f8 f9 ?v3) ?v_0)))) (f50 (f51 f52 (f30 (f31 f32 ?v0) ?v2)) (f45 (f46 ?v1) ?v3))))))
(assert (forall ((?v0 S8) (?v1 S8) (?v2 S26)) (= (f41 (f42 f43 (f13 (f25 f26 ?v0) ?v1)) ?v2) (f27 (f28 f29 (f41 (f42 f43 ?v0) ?v2)) (f41 (f42 f43 ?v1) ?v2)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S26)) (= (f50 (f51 f52 (f4 (f21 f22 ?v0) ?v1)) ?v2) (+ (f50 (f51 f52 ?v0) ?v2) (f50 (f51 f52 ?v1) ?v2)))))
(assert (forall ((?v0 S6) (?v1 S6) (?v2 S26)) (= (f47 (f48 f49 (f10 (f23 f24 ?v0) ?v1)) ?v2) (+ (f47 (f48 f49 ?v0) ?v2) (f47 (f48 f49 ?v1) ?v2)))))
(assert (forall ((?v0 S6) (?v1 S26)) (let ((?v_0 (f47 (f48 f49 (f10 f18 ?v0)) ?v1))) (= (f19 f20 ?v_0) ?v_0))))
(assert (forall ((?v0 S2) (?v1 S26)) (let ((?v_0 (f50 (f51 f52 (f4 f15 ?v0)) ?v1))) (= (f16 f17 ?v_0) ?v_0))))
(assert (forall ((?v0 S3) (?v1 S26)) (= (exists ((?v2 S3)) (and (< (f8 f9 ?v2) (f8 f9 ?v0)) (= (f53 ?v1 ?v2) f1))) (exists ((?v2 S3)) (and (= (f54 ?v2 (f45 (f46 (f6 f7 0)) ?v0)) f1) (= (f53 ?v1 ?v2) f1))))))
(assert (forall ((?v0 S3) (?v1 S26)) (= (forall ((?v2 S3)) (=> (< (f8 f9 ?v2) (f8 f9 ?v0)) (= (f53 ?v1 ?v2) f1))) (forall ((?v2 S3)) (=> (= (f54 ?v2 (f45 (f46 (f6 f7 0)) ?v0)) f1) (= (f53 ?v1 ?v2) f1))))))
(assert (forall ((?v0 Int) (?v1 Int)) (let ((?v_0 (+ (f19 f20 ?v0) (f19 f20 ?v1)))) (= (f19 f20 ?v_0) ?v_0))))
(assert (forall ((?v0 Real) (?v1 Real)) (let ((?v_0 (+ (f16 f17 ?v0) (f16 f17 ?v1)))) (= (f16 f17 ?v_0) ?v_0))))
(assert (forall ((?v0 Int) (?v1 Int)) (= (+ ?v0 ?v1) (+ ?v1 ?v0))))
(assert (forall ((?v0 Real) (?v1 Real)) (= (+ ?v0 ?v1) (+ ?v1 ?v0))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S2)) (let ((?v_0 (f46 (f6 f7 0))) (?v_1 (f51 f52 ?v2))) (= (f50 (f51 f52 (f4 (f39 f40 ?v0) ?v2)) (f45 ?v_0 ?v1)) (- (f50 ?v_1 (f45 ?v_0 (f6 f7 (+ (f8 f9 ?v1) (f8 f9 ?v0))))) (f50 ?v_1 (f45 ?v_0 ?v0)))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S2)) (let ((?v_0 (f46 (f6 f7 0))) (?v_1 (f51 f52 ?v2))) (= (f50 ?v_1 (f45 ?v_0 (f6 f7 (+ (f8 f9 ?v1) (f8 f9 ?v0))))) (+ (f50 (f51 f52 (f4 (f39 f40 ?v0) ?v2)) (f45 ?v_0 ?v1)) (f50 ?v_1 (f45 ?v_0 ?v0)))))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (=> (= (+ ?v0 ?v1) (+ ?v2 ?v1)) (= ?v0 ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (=> (= (+ ?v0 ?v1) (+ ?v2 ?v1)) (= ?v0 ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (=> (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (=> (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (=> (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (=> (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int) (?v3 Int)) (= (+ (+ ?v0 ?v1) (+ ?v2 ?v3)) (+ (+ ?v0 ?v2) (+ ?v1 ?v3)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real) (?v3 Real)) (= (+ (+ ?v0 ?v1) (+ ?v2 ?v3)) (+ (+ ?v0 ?v2) (+ ?v1 ?v3)))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (= (+ ?v0 ?v1) (+ ?v2 ?v1)) (= ?v0 ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (= (+ ?v0 ?v1) (+ ?v2 ?v1)) (= ?v0 ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (= (+ ?v0 ?v1) (+ ?v0 ?v2)) (= ?v1 ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ (f19 (f55 f56 ?v0) ?v1) ?v2) (f19 (f55 f56 (+ ?v0 ?v2)) (+ ?v1 ?v2)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ (f16 (f57 f58 ?v0) ?v1) ?v2) (f16 (f57 f58 (+ ?v0 ?v2)) (+ ?v1 ?v2)))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ (f19 (f55 f59 ?v0) ?v1) ?v2) (f19 (f55 f59 (+ ?v0 ?v2)) (+ ?v1 ?v2)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ (f16 (f57 f60 ?v0) ?v1) ?v2) (f16 (f57 f60 (+ ?v0 ?v2)) (+ ?v1 ?v2)))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ (+ ?v0 ?v1) ?v2) (+ (+ ?v0 ?v2) ?v1))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ (+ ?v0 ?v1) ?v2) (+ (+ ?v0 ?v2) ?v1))))
(assert (forall ((?v0 S9) (?v1 S9) (?v2 S9)) (let ((?v_0 (f28 f29 ?v0))) (= (f27 (f28 f29 (f27 ?v_0 ?v1)) ?v2) (f27 ?v_0 (f27 (f28 f29 ?v1) ?v2))))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ (+ ?v0 ?v1) ?v2) (+ ?v0 (+ ?v1 ?v2)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ (+ ?v0 ?v1) ?v2) (+ ?v0 (+ ?v1 ?v2)))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ (+ ?v0 ?v1) ?v2) (+ ?v0 (+ ?v1 ?v2)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ (+ ?v0 ?v1) ?v2) (+ ?v0 (+ ?v1 ?v2)))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ ?v0 (+ ?v1 ?v2)) (+ (+ ?v0 ?v1) ?v2))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ ?v0 (+ ?v1 ?v2)) (+ (+ ?v0 ?v1) ?v2))))
(assert (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (+ ?v0 (+ ?v1 ?v2)) (+ ?v1 (+ ?v0 ?v2)))))
(assert (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (+ ?v0 (+ ?v1 ?v2)) (+ ?v1 (+ ?v0 ?v2)))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S8) (?v3 S8)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f12 ?v2 ?v4) (f12 ?v3 ?v4)))) (= (f41 (f42 f43 ?v2) ?v0) (f41 (f42 f43 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S2) (?v3 S2)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f3 ?v2 ?v4) (f3 ?v3 ?v4)))) (= (f50 (f51 f52 ?v2) ?v0) (f50 (f51 f52 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S6) (?v3 S6)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f8 ?v2 ?v4) (f8 ?v3 ?v4)))) (= (f47 (f48 f49 ?v2) ?v0) (f47 (f48 f49 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S8) (?v3 S8)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f12 ?v2 ?v4) (f12 ?v3 ?v4)))) (= (f41 (f42 f43 ?v2) ?v0) (f41 (f42 f43 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S2) (?v3 S2)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f3 ?v2 ?v4) (f3 ?v3 ?v4)))) (= (f50 (f51 f52 ?v2) ?v0) (f50 (f51 f52 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S26) (?v2 S6) (?v3 S6)) (=> (= ?v0 ?v1) (=> (forall ((?v4 S3)) (=> (= (f54 ?v4 ?v1) f1) (= (f8 ?v2 ?v4) (f8 ?v3 ?v4)))) (= (f47 (f48 f49 ?v2) ?v0) (f47 (f48 f49 ?v3) ?v1))))))
(assert (forall ((?v0 S26) (?v1 S8) (?v2 S8)) (=> (forall ((?v3 S3)) (=> (= (f54 ?v3 ?v0) f1) (= (f12 ?v1 ?v3) (f12 ?v2 ?v3)))) (= (f41 (f42 f43 ?v1) ?v0) (f41 (f42 f43 ?v2) ?v0)))))
(assert (forall ((?v0 S26) (?v1 S2) (?v2 S2)) (=> (forall ((?v3 S3)) (=> (= (f54 ?v3 ?v0) f1) (= (f3 ?v1 ?v3) (f3 ?v2 ?v3)))) (= (f50 (f51 f52 ?v1) ?v0) (f50 (f51 f52 ?v2) ?v0)))))
(assert (forall ((?v0 S26) (?v1 S6) (?v2 S6)) (=> (forall ((?v3 S3)) (=> (= (f54 ?v3 ?v0) f1) (= (f8 ?v1 ?v3) (f8 ?v2 ?v3)))) (= (f47 (f48 f49 ?v1) ?v0) (f47 (f48 f49 ?v2) ?v0)))))
(assert (forall ((?v0 S26) (?v1 S3) (?v2 S3)) (= (= (f53 (f45 (f61 ?v0) ?v1) ?v2) f1) (forall ((?v3 S3)) (=> (= (f54 ?v3 (f45 (f46 ?v1) ?v2)) f1) (= (f53 ?v0 ?v3) f1))))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S3)) (let ((?v_1 (f42 f43 ?v0)) (?v_2 (f46 ?v1)) (?v_0 (f8 f9 ?v2))) (= (f41 ?v_1 (f45 ?v_2 (f6 f7 (+ ?v_0 1)))) (ite (< ?v_0 (f8 f9 ?v1)) f62 (f27 (f28 f29 (f41 ?v_1 (f45 ?v_2 ?v2))) (f12 ?v0 ?v2)))))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S3)) (let ((?v_1 (f48 f49 ?v0)) (?v_2 (f46 ?v1)) (?v_0 (f8 f9 ?v2))) (= (f47 ?v_1 (f45 ?v_2 (f6 f7 (+ ?v_0 1)))) (ite (< ?v_0 (f8 f9 ?v1)) 0 (+ (f47 ?v_1 (f45 ?v_2 ?v2)) (f8 ?v0 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (let ((?v_1 (f51 f52 ?v0)) (?v_2 (f46 ?v1)) (?v_0 (f8 f9 ?v2))) (= (f50 ?v_1 (f45 ?v_2 (f6 f7 (+ ?v_0 1)))) (ite (< ?v_0 (f8 f9 ?v1)) 0.0 (+ (f50 ?v_1 (f45 ?v_2 ?v2)) (f3 ?v0 ?v2)))))))
(assert (forall ((?v0 S3)) (= (f6 f7 (f8 f9 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f8 f9 (f6 f7 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f8 f9 (f6 f7 ?v0)) 0))))
(check-sat)
(exit)
